{"version":3,"sources":["components/card/card.component.jsx","components/cardlist/cardlist.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","product","CardList","products","map","Renk","axios","require","App","axiosFetcher","fetchArray","a","defaults","baseURL","i","length","tempData","get","then","response","console","log","data","catch","error","push","Kod2","StokTanim","Miktar","Fiyat","Beden","setState","InputBarcodeMapper","event","preventDefault","input","state","stokbarkodmap","onHandleInputChange","e","target","value","currentBarcodes","bind","onSubmit","this","placeholder","onChange","type","name","React","PureComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.549f30f2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card =  props =>(\r\n\r\n    <div className='card-container'>\r\n        <h2><span>Stok kodu:</span> <span className='stok-no' >{props.product['StokTanim']}</span></h2>\r\n        <ul>\r\n            <li><span>Renk:</span>{props.product[\"Renk\"]}</li>\r\n            <li><span>Beden:</span>{props.product[\"Beden\"]}</li>\r\n            <li><span>Miktar:</span> {props.product[\"Miktar\"]}</li>\r\n            <li><span>Fiyat:</span> {props.product[\"Fiyat\"]}</li>\r\n        </ul>\r\n    </div>\r\n\r\n)","import React from 'react';\r\nimport {Card} from '../card/card.component.jsx'\r\nimport './cardlist.styles.css'\r\n\r\nexport const CardList = props =>(\r\n\r\n    <div className='card-list'>\r\n    {props.products.map(product=>(\r\n         <Card key={product.Renk} product={product} />\r\n         ))}\r\n    </div>\r\n\r\n)","import React from 'react';\nimport './App.css';\nimport {CardList} from './components/cardlist/cardlist.component.jsx'\nimport stokbarkodmap from './stokno_barkod_map.json'\nconst axios = require('axios');\n\n\n// Example api request http://185.51.37.235/api/StokBilgi/869783316106\n\nclass App extends React.PureComponent {\n\n  constructor(props){\n    super(props);\n\n\n    this.state={\n        input: '',\n        products : [{Kod2: \"default-card\",StokTanim: 'bir stok aratin',Miktar: 0, Fiyat:0, Renk: 'Gokkusagi', Beden:'Tum Bedenler'}],\n        currentBarcodes:['Mevcut barkod burada olacak']\n    };\n\n    this.onHandleInputChange=this.onHandleInputChange.bind(this)\n    this.InputBarcodeMapper = this.InputBarcodeMapper.bind(this)\n\n  }\n  //  prefix this for testing https://cors-anywhere.herokuapp.com/\n  // makes an axiost request for all the elements in a given array\n  axiosFetcher = async (fetchArray)=>{\n\n    axios.defaults.baseURL = 'https://intense-everglades-65236.herokuapp.com/http://185.51.37.235/api/StokBilgi/';\n    let products = []\n    if (fetchArray){\n       for(let i=0;i<fetchArray.length;i++){\n        let tempData = ''\n        await axios.get(`${fetchArray[i]}`)\n        .then( (response) =>{\n          // handle success\n          console.log(response.data[0])\n          tempData=response.data[0]\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .then(function () {\n          // always executed\n          \n        });\n        products.push(tempData)\n    }\n    \n    console.log(products)\n    if (products.length === 0){\n      products = [{Kod2: \"boyle bir stok yok\",StokTanim: 'boyle bi stok kodu yok',Miktar: 0, Fiyat:0, Renk: 'Gokkusagi', Beden:'Tum Bedenler'}]\n      this.setState({products:products})\n    }else{\n      this.setState({products:products})\n    }\n    }else{\n      products = [{Kod2: \"boyle bir stok yok\",StokTanim: 'boyle bi stok kodu yok',Miktar: 0, Fiyat:0, Renk: 'Gokkusagi', Beden:'Tum Bedenler'}]\n      this.setState({products:products})\n    }\n   \n    \n  }\n\n  // takes the stock code input, finds the associated barcode nos, and creates a new array that will be fetched by axios\n  // this should be what is run when user clicks 'ara' button\n  InputBarcodeMapper = (event)=>{\n    event.preventDefault()\n    const {input} = this.state\n    if (input === ''){\n      return;\n    }\n    // does the mapping and returns an array\n    const fetchArray = stokbarkodmap[input]\n    console.log(fetchArray)\n    this.axiosFetcher(fetchArray)\n  }\n\n\n  onHandleInputChange = (e)=>{\n    this.setState({input:e.target.value})\n  }\n   \n  \n  \n  render(){\n     return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <form onSubmit={this.InputBarcodeMapper}>\n          <label>\n            <span className=\"main-barkod\">Stok kodu : </span>\n            <input placeholder='Ornek: 20101' value={this.state.input} onChange={this.onHandleInputChange} type=\"text\" name=\"name\" />\n          </label>\n          <button className=\"button\"  type='submit'>Ara</button>\n        </form>\n  \n      </header>\n      <CardList products={this.state.products}></CardList>\n     \n    </div>\n  );\n  }\n \n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}